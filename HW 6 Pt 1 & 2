
PT 1:
#include <iostream>
using namespace std;

int main() {
    int data[] = {1, 3, 6, 7, 9};
    int data1[] = {5, 3, 3, 11};

    int min_size = min(sizeof(data)/sizeof(data[0]), sizeof(data1)/sizeof(data1[0]));

    for (int i = 0; i < min_size; ++i) {
        data[i] = data[i] + data1[i];
        data1[i] = data[i] - data1[i];
        data[i] = data[i] - data1[i];
    }

    // Output the arrays after swapping
    cout << "Data after swapping: ";
    for (int i = 0; i < min_size; ++i) {
        cout << data[i] << " ";
    }
    cout << endl;

    cout << "Data1 after swapping: ";
    for (int i = 0; i < min_size; ++i) {
        cout << data1[i] << " ";
    }
    cout << endl;

    return 0;
}

PT 2: 

#include <iostream>
using namespace std;

// search and output common elements 
void find_common_elements(int data[], int data_size, int data1[], int data1_size) {
    cout << "Common elements: ";
    for (int i = 0; i < data_size; ++i) {
        for (int j = 0; j < data1_size; ++j) {
            if (data[i] == data1[j]) {
                cout << data[i] << " ";
                break;  // Move to next element after finding a match
            }
        }
    }
    cout << endl;
}

int main() {
    int data[] = {1, 3, 6, 7, 9};
    int data1[] = {5, 3, 3, 11};

    // Finding the size of the arrays
    int data_size = sizeof(data) / sizeof(data[0]);
    int data1_size = sizeof(data1) / sizeof(data1[0]);

    // Find and print common elements
    find_common_elements(data, data_size, data1, data1_size);

    return 0;
}
